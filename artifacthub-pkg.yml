---
version: 0.4.2
name: user-group-psp
displayName: User Group PSP
createdAt: '2023-02-06T13:27:15+02:00'
description: A Pod Security Policy that controls the container user and groups
license: Apache-2.0
homeURL: https://github.com/kubewarden/user-group-psp-policy
containersImages:
- name: policy
  image: ghcr.io/kubewarden/policies/user-group-psp:v0.4.2
keywords:
- psp
- container
- user
- group
links:
- name: policy
  url: https://github.com/kubewarden/user-group-psp-policy/releases/download/v0.4.2/policy.wasm
- name: source
  url: https://github.com/kubewarden/user-group-psp-policy
provider:
  name: kubewarden
recommendations:
- url: https://artifacthub.io/packages/helm/kubewarden/kubewarden-controller
annotations:
  kubewarden/resources: Pod
  kubewarden/mutation: true
  kubewarden/contextAware: false
  kubewarden/rules: |
    rules:
    - apiGroups: [""]
      apiVersions: ["v1"]
      resources: ["pods"]
      operations: ["CREATE"] # kubernetes doesn't allow to add/remove privileged containers to an already running pod
    - apiGroups: [""]
      apiVersions: ["v1"]
      resources: ["replicationcontrollers"]
      operations: ["CREATE", "UPDATE"]
    - apiGroups: ["apps"]
      apiVersions: ["v1"]
      resources: ["deployments","replicasets","statefulsets","daemonsets"]
      operations: ["CREATE", "UPDATE"]
    - apiGroups: ["batch"]
      apiVersions: ["v1"]
      resources: ["jobs","cronjobs"]
      operations: ["CREATE", "UPDATE"]
  kubewarden/questions-ui: |
    questions:
    - default: null
      description: >-
        This policy is a replacement for the Kubernetes Pod Security Policy that
        controls containers user and groups.
      group: Settings
      label: Description
      required: false
      hide_input: true
      type: string
      variable: description
    - default: []
      description: Controls which user ID the containers are run with.
      group: Settings
      label: Run as user
      hide_input: true
      type: map[
      variable: run_as_user
      subquestions:
        - default: ''
          tooltip: >-
            Defines the strategy used by the policy to enforce users and groups used
            in containers.
          group: Settings
          label: Rule
          options:
            - MustRunAs
            - MustRunAsNonRoot
            - RunAsAny
          type: enum
          variable: run_as_user.rule
        - default: false
          group: Settings
          label: Overwrite
          show_if: run_as_user.rule=MustRunAs||run_as_user.rule=MustRunAsNonRoot
          title: Overwrite
          tooltip: >-
            The overwrite attribute can be set only with the MustRunAs rule. This
            flag configures the policy to mutate the runAsUser or runAsGroup despite
            of the value present in the request - even if the value is a valid one.
            The default value of this attribute is false.
          type: boolean
          variable: run_as_user.overwrite
        - default: []
          description: >-
            Ranges is a list of JSON objects with two attributes: min and max. Each
            range object define the user/group ID range used by the rule.
          group: Settings
          label: Ranges
          show_if: run_as_user.rule=MustRunAs||run_as_user.rule=MustRunAsNonRoot
          hide_input: true
          type: map[
          variable: run_as_user.ranges
          subquestions:
            - default: 0
              group: Settings
              label: min
              show_if: run_as_user.rule=MustRunAs||run_as_user.rule=MustRunAsNonRoot
              tooltip: Minimum UID or GID
              type: int
              variable: run_as_user.ranges.min
            - default: 0
              group: Settings
              label: max
              show_if: run_as_user.rule=MustRunAs||run_as_user.rule=MustRunAsNonRoot
              tooltip: Maxium UID or GID
              type: int
              variable: run_as_user.ranges.max
    - default: []
      description: Controls which primary group ID the containers are run with.
      group: Settings
      label: Run as group
      hide_input: true
      type: map[
      variable: run_as_group
      subquestions:
        - default: ''
          tooltip: >-
            Defines the strategy used by the policy to enforce users and groups used
            in containers.
          group: Settings
          label: Rule
          options:
            - MustRunAs
            - MustRunAsNonRoot
            - RunAsAny
          type: enum
          variable: run_as_group.rule
        - default: false
          group: Settings
          label: Overwrite
          show_if: run_as_group.rule=MustRunAs||run_as_group.rule=MustRunAsNonRoot
          type: boolean
          variable: run_as_group.overwrite
        - default: []
          description: >-
            Ranges is a list of JSON objects with two attributes: min and max. Each
            range object define the user/group ID range used by the rule.
          group: Settings
          label: Ranges
          show_if: run_as_group.rule=MustRunAs||run_as_group.rule=MustRunAsNonRoot
          hide_input: true
          type: map[
          variable: run_as_group.ranges
          subquestions:
            - default: 0
              group: Settings
              label: min
              show_if: run_as_group.rule=MustRunAs||run_as_group.rule=MustRunAsNonRoot
              tooltip: Minimum UID or GID
              type: int
              variable: run_as_group.ranges.min
            - default: 0
              group: Settings
              label: max
              show_if: run_as_group.rule=MustRunAs||run_as_group.rule=MustRunAsNonRoot
              tooltip: Maxium UID or GID
              type: int
              variable: run_as_group.ranges.max
    - default: []
      description: Controls which group IDs containers add.
      group: Settings
      label: Supplemental groups
      hide_input: true
      type: map[
      variable: supplemental_groups
      subquestions:
        - default: ''
          tooltip: >-
            Defines the strategy used by the policy to enforce users and groups used
            in containers.
          group: Settings
          label: Rule
          options:
            - MustRunAs
            - MustRunAsNonRoot
            - RunAsAny
          type: enum
          variable: supplemental_groups.rule
        - default: false
          group: Settings
          label: Overwrite
          show_if: >-
            supplemental_groups.rule=MustRunAs||supplemental_groups.rule=MustRunAsNonRoot
          type: boolean
          variable: supplemental_groups.overwrite
        - default: []
          description: >-
            Ranges is a list of JSON objects with two attributes: min and max. Each
            range object define the user/group ID range used by the rule.
          group: Settings
          label: Ranges
          show_if: >-
            supplemental_groups.rule=MustRunAs||supplemental_groups.rule=MustRunAsNonRoot
          hide_input: true
          type: map[
          variable: supplemental_groups.ranges
          subquestions:
            - default: 0
              group: Settings
              label: min
              show_if: >-
                supplemental_groups.rule=MustRunAs||supplemental_groups.rule=MustRunAsNonRoot
              tooltip: Minimum UID or GID
              type: int
              variable: supplemental_groups.ranges.min
            - default: 0
              group: Settings
              label: max
              show_if: >-
                supplemental_groups.rule=MustRunAs||supplemental_groups.rule=MustRunAsNonRoot
              tooltip: Maxium UID or GID
              type: int
              variable: supplemental_groups.ranges.max
